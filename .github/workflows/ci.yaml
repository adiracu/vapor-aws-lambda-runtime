name: CI
on: 
  push:
    branches: 
    - main
  pull_request:
    branches: 
    - "*"

jobs:

  "validity-Tests":
    runs-on: macOS-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install swiftformat
      run: brew install swiftformat
    - name: Run validity
      run: ./scripts/validity.sh .

  "tuxOS-Tests":
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        images:
        - swift:5.2-amazonlinux2
        - swift:5.3-amazonlinux2
        - swift:5.4-amazonlinux2
        - swiftlang/swift:nightly-5.5-amazonlinux2
    container:
      image: ${{ matrix.images }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Test
      run: swift test --enable-code-coverage --enable-test-discovery
    - name: Convert coverage files
      run: llvm-cov export -format="lcov" .build/debug/vapor-aws-lambda-runtimePackageTests.xctest -instr-profile .build/debug/codecov/default.profdata > info.lcov
    - name: Upload to codecov.io
      uses: codecov/codecov-action@v1
      with:
        file: info.lcov

  "example-Build":
    runs-on: ubuntu-latest
    strategy:
      matrix:
        examples:
        - Hello
        images:
        - swift:5.2-amazonlinux2
        - swift:5.3-amazonlinux2
        - swift:5.4-amazonlinux2
        - swiftlang/swift:nightly-5.5-amazonlinux2
    defaults:
      run:
        working-directory: examples/${{ matrix.examples }}
    container:
      image: ${{ matrix.images }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install dependencies
      run: yum -y install openssl-devel
    - name: Build
      run: swift build -c release

  "macOS-Tests":
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        xcode:
        - 11.7 # Swift 5.2
        - 12.4 # Swift 5.3
        - latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - uses: maxim-lobanov/setup-xcode@v1.2.3
      with:
        xcode-version: ${{ matrix.xcode }}
    - name: Xcode Tests
      run: swift test --enable-code-coverage
    - name: Generate Coverage Report
      if: matrix.xcode == 'latest'
      run: xcrun llvm-cov export -format="lcov" .build/debug/vapor-aws-lambda-runtimePackageTests.xctest/Contents/MacOS/vapor-aws-lambda-runtimePackageTests -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
    - name: Upload coverage to Codecov
      if: matrix.xcode == 'latest'
      uses: codecov/codecov-action@v1
